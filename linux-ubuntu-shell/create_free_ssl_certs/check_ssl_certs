# Check an MD5 hash of the public key to ensure that it matches with what is in a CSR or private key using openssl command
## https://knowledgebase.garapost.com/index.php/2018/02/09/how-to-check-an-md5-hash-of-the-public-key-to-ensure-that-it-matches-with-what-is-in-a-csr-or-private-key-using-openssl-command/

Intermediate Certificate files must end with the root certificate or certificate most proximate to the root and be in descending order from the Main/Server Certificate to the Root
Example:
  openssl crl2pkcs7 -nocrl -certfile test-chain.txt | openssl pkcs7 -print_certs -noout

     subject=C = GB, ST = England, L = London, O = IT, OU = example Int CA, CN = example.com
     issuer=CN = example Int CA
     
     subject=CN = example Int CA
     issuer=CN = example Root CA
     
     subject=CN = example Root CA
     issuer=CN = example Root CA

############################## ROOT, the INTERMEDIATE and the private certificates chain ##############################
|----------------------|
| ROOT Certificate.crt |
|----------------------|
     |
     | signs --> |------------------------------|
                 | INTERMEDIATE Certificate.crt |
                 |------------------------------|
                     |
                     | signs ----> |---------------------|
                                   | SSL Certificate.crt |
                                   |---------------------|

################################## CSR,key and CERT ##############################################################################

The MD5 hash should match the CSR, CERT and the KEY, that means they are correct
# Check MD 5hash of the CERT
     openssl x509 -noout -modulus -in certificate.crt | openssl md5
     openssl x509 -noout -text -in certificate.crt

# Check MD 5hash of the KEY
     openssl rsa -noout -modulus -in privateKey.key | openssl md5
     openssl rsa -noout -text -in privateKey.key 
     openssl rsa -noout -check -in privateKey.key 

# Check MD 5hash of the CSR
     openssl req -noout -modulus -in CSR.csr | openssl md5
     openssl req -noout -text -verify -in CSR.csr
     openssl req -noout -text -in CSR.csr

# Verify a "PRIVATE-KEY" matches the "CERTIFICATE" and the "CSR"
     openssl x509 -noout -modulus -in server.crt | openssl md5
     openssl rsa -noout -modulus -in server.key | openssl md5
     openssl req -noout -modulus -in server.csr | openssl md5

(Method 1)############################## TRACK the ROOT, the INTERMEDIATE and the private certificates correctly ##############################
1. First, check the CSR: 
  openssl req -text -noout -verify -in CSR.csr | egrep "CN|DNS"
        CN=*.example.com
        DNS=example.com,DNS:www.example.com

2. The CSR matches the CN, check the CRT & Looking for the "Int CA" intermediate cert
  openssl x509  -text -noout -in CERT.crt | egrep 'Issuer:|Subject:'
        Issuer:  CN=*.example.com Int CA
        Subject: C=GB, ST=England, L=London, O=Local organization Ltd, OU=IT, CN=*.example.com
        
 3. The intermediate cert was issued by root, check the CRT & Looking for the "ROOT CA" root cert
  openssl x509 -in IntUSERTrustRSAAddTrustCA.crt -text -noout | egrep 'Issuer:|Subject:'
        Issuer: CN=*.example.com Root CA
        Subject: CN=*.example.com Int CA
        
4. The root certs matches with the issued intermediate, Check the CRT until the "Issuer" and the "Subject" has no other certs and should match
  openssl x509 -in TrustExternalCARoot.crt -text -noout | egrep 'Issuer:|Subject:'
        Issuer: CN=*.example.com Root CA
        Subject: CN=*.example.com Root CA


Add the [CA, root and intermediate] certificates into "CARoot.crt" and the SSL cert into "CERT.crt"  

  openssl verify -verbose -CAfile CA_Root_and_intermediate.crt UserCert.crt
       CERT.crt: OK
OR

  openssl verify -verbose -CAfile CA_RootCert.pem -untrusted Intermediate.pem UserCert.pem



(Method 2)############################# TRACK the ROOT, the INTERMEDIATE and the private certificates correctly ##############################
--------------------------
openssl x509 -in entity.pem -hash -issuer_hash -noout
c54c66ba #this is subject hash
99bdd351 #this is issuer hash

openssl x509 -in intermediate.pem -hash -issuer_hash -noout
99bdd351
4a6481c9

openssl x509 -in root.pem -hash -issuer_hash -noout
4a6481c9
4a6481c9



BONUS section (view all ssl certificates in a bundle) :
openssl crl2pkcs7 -nocrl -certfile CHAINED.pem | openssl pkcs7 -print_certs -text -noout | grep 'Subject:'

    
