server {
    listen 80;
    server_name example.com;
    # force HTTPS
    rewrite ^ https://www.example.com$request_uri? permanent;
    access_log /var/log/nginx/example.com_80.access.log;
    error_log /var/log/nginx/example.com_80.error.log error;
}
server {
    listen 443 ssl http2;
    server_name www.example.com;

    #Â include /etc/nginx/http-auth.conf;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    ssl_prefer_server_ciphers off;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_session_tickets off;
    ssl_session_timeout 24h;
    ssl_buffer_size 1400;

    # https://ssl-config.mozilla.org/
    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/ssl/certs/dhparam.pem;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security max-age=63072000 always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_certificate /etc/ssl/certs/www.example.com.sha256.crt-ocsp.chain.crt;
    ssl_certificate_key /etc/ssl/private/www.example.com.key;
    ssl_trusted_certificate /etc/ssl/certs/www.example.com.sha256.crt-ocsp.chain.crt;

    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    # X-Frame-Options is to prevent from clickJacking attack
    add_header X-Frame-Options SAMEORIGIN;

    # disable content-type sniffing on some browsers.
    add_header X-Content-Type-Options nosniff;

    # This header enables the Cross-site scripting (XSS) filter
    add_header X-XSS-Protection "1; mode=block";

    access_log /var/log/nginx/www.example.com.ssl.access.log;
    error_log /var/log/nginx/www.example.com.ssl.error.log error;

    client_max_body_size 6000M;
    location / {
        proxy_pass http://127.0.0.1:8080/;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_cache cache;
        proxy_cache_bypass $cookie_auth_tkt;
        proxy_no_cache $cookie_auth_tkt;
        proxy_cache_valid 30m;
        proxy_cache_key $host$scheme$proxy_host$request_uri;
        # In emergency comment out line to force caching
        # proxy_ignore_headers X-Accel-Expires Expires Cache-Control;
    }

}
